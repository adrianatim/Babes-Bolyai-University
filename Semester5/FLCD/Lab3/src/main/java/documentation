Documentation:

Classes:
file.ReadWrite - a class for in/out file which contains 3 methods :
                        -getFileContent(filename) get the content of a file, line by line
                        -writeSTToFile(filename, st, st) writes the symbol tables to a file
                        -writePIFToFile(filename, pif) writes the program internal form to a file

scanner.SplitText - a class for split text only and contains 2 methods
                        - eraseEmptyValuesFromList(list)
                        - splitLine(string) which splits a string after space and square brackets, and in the final we remove the empty values
scanner.Validation - a class which verifies if a token is a constant/identifier/reserved word
                   - verifyItsIdentifier(token) returns the position of the token if it's an identifier, otherwise returns -1
                   - verifyItsConstant(token) returns the position of the token if it's a constant, otherwise returns -1
                   - verifyIfItsReservedWord(token) returns true if it's a reserved word, otherwise returns false
                   - getPosition(token) get the unique number for every token
                   - verifyIfIdentifierIsCorrectFormatted(token)
                   - verifyIfItsStringType(token)
                   - verifyIfItsNumericType(token)
                   - verifyIfItsCharType(token)

scanner.Scanner - contains 2 symbolTables - one for identifier and one for constant

table.ProgramInternalForm - a class for storing every token, which appear in a given mini program, and its position if it is an identifier or a constant
                    - contains an instance of the symbol table - to verify if we have an identifier or a constant
                    - add(token) function where we add each token and its position after verifying each one of them
                    - toString() override for better looking

table.SymbolTable - a class which stores the tokens and a unique number into 2 hasTables, one for constants and one for identifiers
            - add(token, position) add in hashTable the key and value corresponded with the parameters
            - toString() override for better looking

Main - the principal class where we lunch the main thread to dissect every mini program and put the ST and PIF results in a specific files
     - verifyAndAddTokensInST(miniProgram, filenameST, filenamePIF) a method where we verify if it has appear an error or not, and if so
     we should point that out by printing an error and specifying on each line